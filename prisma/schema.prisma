// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Store {
  id      String @id @default(cuid())
  ownerId String

  name        String
  description String
  address     String
  color       String?
  logoUrl     String?

  products Product[]

  variants ProductVariant[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([ownerId, name])
  @@index([ownerId])
}

model Category {
  id   String @id @default(cuid())
  name String @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Product {
  id String @id @default(cuid())

  ownerId String
  storeId String

  name        String
  description String?
  imageUrl    String?

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  store Store @relation(fields: [storeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  attributes Attribute[]
  variants   ProductVariant[]

  @@unique([storeId, name])
  @@index([ownerId])
  @@index([storeId])
}

model Attribute {
  id        String @id @default(cuid())
  name      String
  productId String

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  values AttributeValue[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, name])
  @@index([productId])
}

model AttributeValue {
  id          String    @id @default(cuid())
  value       String
  attributeId String
  attribute   Attribute @relation(fields: [attributeId], references: [id], onDelete: Cascade)

  productAttributeValues ProductAttributeValue[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([attributeId, value])
  @@index([attributeId])
}

model ProductVariant {
  id String @id @default(cuid())

  sku               String
  price             Float
  costPrice         Float
  imageUrl          String?
  stock             Int
  lowStockThreshold Int?    @default(0)

  order Int

  store   Store  @relation(fields: [storeId], references: [id], onDelete: Cascade)
  storeId String

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  productAttributeValues ProductAttributeValue[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([storeId, sku])
  @@index([productId])
  @@index([storeId])
}

model ProductAttributeValue {
  id               String         @id @default(cuid())
  productVariantId String
  attributeValueId String
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id], onDelete: Cascade)
  attributeValue   AttributeValue @relation(fields: [attributeValueId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productVariantId])
  @@index([attributeValueId])
}
